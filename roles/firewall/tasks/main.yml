---
- name: Configure the kernel to keep connections alive when enabling the firewall
  sysctl:
    name: net.netfilter.nf_conntrack_tcp_be_liberal
    value: 1
    state: present
    sysctl_set: yes
    reload: yes

# Install firewall : packages, certificates, configuration files
- name: Include OS specific vars
  include_vars: "{{ ansible_facts['os_family'] }}.yml"
  no_log: true

- name: Install task requirements
  include_tasks: "install-{{ ansible_facts['os_family'] }}.yml"

- name: configure ufw defaults
  become: true
  ufw: direction={{ item.direction }} policy={{ item.policy }}
  with_items:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  notify:
    - restart ufw

- name: "configure ufw ports and set state to {{ firewall_ufw_state }}"
  become: true
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  loop: "{{ firewall_allowed_ports }}"
  notify:
    - restart ufw

# You should install Docker before this rule.
- name: configure ufw before.init to remove existing rules
  blockinfile:
    path: /etc/ufw/before.init
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: stop\)
    block: |
      iptables -F DOCKER-USER || true
      iptables -A DOCKER-USER -j RETURN || true
      iptables -X ufw-user-input || true

- name: Configure ufw before.init to drop ICMP timestamps
  blockinfile:
    path: /etc/ufw/before.init
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ICMP"
    insertafter: stop\)
    block: |
      iptables -A INPUT -p icmp --icmp-type timestamp-request -j DROP || true
      iptables -A OUTPUT -p icmp --icmp-type timestamp-reply -j DROP || true

- name: chmod /etc/ufw/before.init
  file:
    path: /etc/ufw/before.init
    state: touch
    mode: "a+x"

- name: configure ufw to work with DOCKER-USER chain name
  blockinfile:
    path: /etc/ufw/after.rules
    marker: "# {mark} ANSIBLE MANAGED BLOCK (docker-user)"
    block: |
      *filter
      :DOCKER-USER - [0:0]
      :ufw-user-input - [0:0]
      :ufw-after-logging-forward - [0:0]

      -A DOCKER-USER -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      -A DOCKER-USER -m conntrack --ctstate INVALID -j DROP
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-user-input
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-after-logging-forward
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j DROP

      COMMIT
